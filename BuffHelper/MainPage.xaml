<Page
    x:Class="BuffHelper.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BuffHelper"
    xmlns:data="using:BuffHelper.Data"
    xmlns:converter="using:BuffHelper.TypeConverters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:BuffHelper.Controls"
    mc:Ignorable="d" Margin="0,0,0,0">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls\MainResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <controls:BuffSummary Grid.Row="0"
                    HorizontalAlignment="Stretch"
                    BuffText="{x:Bind ViewModel.AllModifiers, Mode=OneWay}"
                    IsTabStop="True" />
        <Grid Grid.Row="1" Background="Beige" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Margin="10,5" Content="Add Buff" HorizontalAlignment="Left"/>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"
                       Text="Filter by:" />
            <ComboBox Grid.Column="2" VerticalAlignment="Center"
                      Margin="5" Width="40" ItemsSource="{x:Bind ViewModel.Filters}" 
                      SelectedIndex="{x:Bind ViewModel.CurrentFilterIndex, Mode=TwoWay}" >
                <ComboBox.Resources>
                    <DataTemplate x:Key="ComboBoxItem" x:DataType="data:FilterType">
                        <TextBlock Text="{x:Bind Path=FilterName}"/>
                    </DataTemplate>
                </ComboBox.Resources>
                <ComboBox.ItemTemplate>
                    <StaticResource ResourceKey="ComboBoxItem"/>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Column="3" Margin="5, 5" Content="Clear Buffs"  HorizontalAlignment="Right" Click="ClearAllBuffs"/>
        </Grid>
        <ListView ItemsSource="{x:Bind ViewModel.Buffs, Mode=OneWay}" Grid.Row="2">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="data:ActivatableBuff">
                    <ToggleButton HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" BorderThickness="3"
                                  Background="{x:Bind Path=Buff.BuffType, Converter={StaticResource BuffToBrushConverter}}"
                                  BorderBrush="{x:Bind Path=Buff.BuffType, Converter={StaticResource BuffToBorderBrushConverter}}"
                                  AutomationProperties.Name="{x:Bind Buff.Name}"
                                  AutomationProperties.HelpText="{x:Bind Buff.Description}"
                                  IsChecked="{x:Bind IsActive, Converter={StaticResource NullableBoolFalseConverter}, Mode=TwoWay}">
                        <ToggleButton.Style>
                            <!-- On checked status, toggle button was covering the background color with a blue border. -->
                            <Style TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                        <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight">
                            <CheckBox HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" 
                                  IsChecked="{x:Bind IsActive, Converter={StaticResource NullableBoolFalseConverter}, Mode=TwoWay}"
                                  IsTabStop="False"/>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{x:Bind Path=Buff.Name}"/>
                            <TextBlock Text="{x:Bind Path=Buff.Description}" />
                        </StackPanel>
                    </StackPanel>
                    </ToggleButton>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Padding" Value="0,2" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="IsTabStop" Value="False" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</Page>
